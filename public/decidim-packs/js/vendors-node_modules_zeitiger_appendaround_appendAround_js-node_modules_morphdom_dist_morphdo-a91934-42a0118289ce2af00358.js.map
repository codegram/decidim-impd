{"version":3,"file":"js/vendors-node_modules_zeitiger_appendaround_appendAround_js-node_modules_morphdom_dist_morphdo-a91934-42a0118289ce2af00358.js","sources":["webpack://decidim/./node_modules/@zeitiger/appendaround/appendAround.js","webpack://decidim/./node_modules/attrobj/dist/attrobj.js","webpack://decidim/./node_modules/aug/dist/aug.module.js","webpack://decidim/./node_modules/domassist/dist/domassist.js","webpack://decidim/./node_modules/domodule/dist/domodule.module.js","webpack://decidim/./node_modules/morphdom/dist/morphdom-esm.js","webpack://decidim/./node_modules/select/src/select.js","webpack://decidim/./node_modules/social-share-button/dist/social-share-button.js","webpack://decidim/./node_modules/svg4everybody/dist/svg4everybody.js"],"sourcesContent":["/*! appendAround markup pattern. [c]2012, @scottjehl, Filament Group, Inc. MIT/GPL \nhow-to:\n\t1. Insert potential element containers throughout the DOM\n\t2. give each container a data-set attribute with a value that matches all other containers' values\n\t3. Place your appendAround content in one of the potential containers\n\t4. Call appendAround() on that element when the DOM is ready\n*/\n(function( $ ){\n\t$.fn.appendAround = function(){\n\t  return this.each(function(){\n      \n\t    var $self = $( this ),\n\t        att = \"data-set\",\n\t        $parent = $self.parent(), \n\t        parent = $parent[ 0 ],\n\t        attval = $parent.attr( att ),\n\t        $set = $( \"[\"+ att +\"='\" + attval + \"']\" );\n\n\t\tfunction isHidden( elem ){\n\t\t\treturn $(elem).css( \"display\" ) === \"none\";\n\t\t}\n\n\t\tfunction appendToVisibleContainer(){\n\t\t\tif( isHidden( parent ) ){\n\t\t\t\tvar found = 0;\n\t\t\t\t$set.each(function(){\n\t\t\t\t\tif( !isHidden( this ) && !found ){\n\t\t\t\t\t\t$self.appendTo( this );\n\t\t\t\t\t\tfound++;\n\t\t\t\t\t\tparent = this;\n\t\t\t\t\t}\n\t\t\t\t});\n\t      \t}\n\t    }\n      \n\t    appendToVisibleContainer();\n      \n\t    $(window).bind( \"resize\", appendToVisibleContainer );\n      \n\t  });\n\t};\n}( jQuery ));\n","/* global window */\nfunction attrobj (key, el) {\n  var values = {};\n  Object.keys(el.dataset).forEach(function (data) {\n    if (data.match(new RegExp(\"^\" + key)) && data !== key) {\n      var optionName = data.replace(key, '');\n      var isGlobal = false;\n\n      if (optionName.match(/^Global/)) {\n        optionName = optionName.replace('Global', '');\n        isGlobal = true;\n      }\n\n      optionName = \"\" + optionName[0].toLowerCase() + optionName.slice(1);\n\n      if (isGlobal) {\n        values[optionName] = window[el.dataset[data]];\n      } else {\n        values[optionName] = el.dataset[data];\n      }\n\n      if (typeof values[optionName] === 'undefined' || values[optionName] === '') {\n        values[optionName] = true;\n      }\n    }\n  });\n  return values;\n}\n\nexport default attrobj;\n//# sourceMappingURL=attrobj.js.map\n","var l=function(){var l=[].slice.call(arguments);return l.unshift(!1),t.apply(null,l)};function t(){var t=[].slice.call(arguments),e=t[0],n={};return t.slice(1,t.length).forEach(function(r){Object.keys(r).forEach(function(a){if(!e||void 0!==t[1][a]){var c=r[a];n[a]=Array.isArray(c)||\"object\"!=typeof c||\"object\"!=typeof n[a]?c:(e?l.defaults:l)(n[a],c)}})}),n}l.defaults=function(){var l=[].slice.call(arguments);return l.unshift(!0),t.apply(null,l)};export default l;\n//# sourceMappingURL=aug.module.js.map\n","function isWindow(obj) {\n  return obj != null && obj === obj.window;\n}\n\nfunction find(selector, context) {\n  if (context === void 0) {\n    context = null;\n  }\n\n  if (selector instanceof HTMLElement || selector instanceof Node || isWindow(selector)) {\n    return [selector];\n  } else if (selector instanceof NodeList) {\n    return [].slice.call(selector);\n  } else if (typeof selector === 'string') {\n    var startElement = context ? find(context)[0] : document;\n    return [].slice.call(startElement.querySelectorAll(selector));\n  }\n\n  return [];\n}\n\nfunction addClass(selector, cls) {\n  if (Array.isArray(selector)) {\n    return selector.forEach(function (item) {\n      return addClass(item, cls);\n    });\n  }\n\n  var els = find(selector);\n\n  if (els.length) {\n    var clsArray = [].concat(cls);\n    els.forEach(function (el) {\n      clsArray.forEach(function (item) {\n        el.classList.add(item);\n      });\n    });\n    return els;\n  }\n}\n\nfunction on(selector, event, cb, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  if (Array.isArray(selector)) {\n    selector.forEach(function (item) {\n      return on(item, event, cb, capture);\n    });\n    return;\n  }\n\n  var data = {\n    cb: cb,\n    capture: capture\n  };\n\n  if (!window._domassistevents) {\n    window._domassistevents = {};\n  }\n\n  window._domassistevents[\"_\" + event] = data;\n  var el = find(selector);\n\n  if (el.length) {\n    el.forEach(function (item) {\n      item.addEventListener(event, cb, capture);\n    });\n  }\n}\n\nfunction matches(el, selector) {\n  var proto = Element.prototype;\n  var match = false;\n  var prefixes = ['matches', 'matchesSelector', 'webkitMatchesSelector', 'mozMatchesSelector', 'msMatchesSelector', 'oMatchesSelector'];\n  prefixes.forEach(function (prefix) {\n    if (proto.hasOwnProperty(prefix)) {\n      match = proto[prefix];\n    }\n  });\n\n  if (match) {\n    return el ? match.call(el, selector) : null;\n  }\n}\n\nfunction closest(el, selector) {\n  do {\n    if (matches(el, selector)) {\n      return el;\n    }\n\n    el = el.parentElement || el.parentNode;\n  } while (el !== null && el.nodeType === 1);\n\n  return null;\n}\n\nfunction delegate(el, event, selector, cb, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  on(el, event, function (e) {\n    if (e.target && closest(e.target, selector)) {\n      return cb(e);\n    }\n  }, capture);\n}\n\nfunction findOne(selector, el) {\n  var found = find(selector, el);\n\n  if (found.length) {\n    return found[0];\n  }\n\n  return null;\n}\n\n// Check for the usage of native support for CustomEvents which is lacking\n// completely on IE.\n//\n\nfunction canIuseNativeCustom() {\n  try {\n    var p = new CustomEvent('t', {\n      detail: {\n        a: 'b'\n      }\n    });\n    return p.type === 't' && p.detail.a === 'b';\n  } catch (e) {\n    return false;\n  }\n} // Lousy polyfill for the Custom Event constructor for IE.\n\n\nvar IECustomEvent = function CustomEvent(type, params) {\n  var e = document.createEvent('CustomEvent');\n\n  if (params) {\n    e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);\n  } else {\n    e.initCustomEvent(type, false, false, undefined);\n  }\n\n  return e;\n};\n\nvar DomassistCustomEvent = false;\n\nfunction fire(selector, type, params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  if (Array.isArray(selector)) {\n    return selector.forEach(function (item) {\n      return fire(item, type, params);\n    });\n  }\n\n  if (!DomassistCustomEvent) {\n    DomassistCustomEvent = canIuseNativeCustom() ? CustomEvent : IECustomEvent;\n  }\n\n  var els = find(selector);\n\n  if (els.length) {\n    if (params.bubbles !== false) {\n      params.bubbles = true;\n    }\n\n    els.forEach(function (el) {\n      var event = new DomassistCustomEvent(type, params);\n      el.dispatchEvent(event);\n    });\n    return els;\n  }\n}\n\nfunction hasClass(selector, cls) {\n  var el = findOne(selector);\n\n  if (!el) {\n    return false;\n  }\n\n  return el.classList.contains(cls);\n}\n\nfunction hide(selector) {\n  if (Array.isArray(selector)) {\n    selector.forEach(function (item) {\n      return hide(item);\n    });\n  }\n\n  var els = find(selector);\n\n  if (els.length) {\n    els.forEach(function (el) {\n      var currentDisplay = window.getComputedStyle(el).getPropertyValue('display');\n\n      if (currentDisplay !== 'none') {\n        el.dataset._currentDisplay = currentDisplay;\n        el.style.display = 'none';\n      }\n    });\n  }\n}\n\nfunction hover(el, enter, exit) {\n  on(el, 'mouseenter', enter);\n  on(el, 'mouseleave', exit);\n}\n\nfunction off(selector, event) {\n  if (Array.isArray(selector)) {\n    selector.forEach(function (item) {\n      return off(item, event);\n    });\n  }\n\n  if (!window._domassistevents) {\n    window._domassistevents = {};\n  }\n\n  var data = window._domassistevents[\"_\" + event];\n\n  if (!data) {\n    return;\n  }\n\n  var el = find(selector);\n\n  if (el.length) {\n    el.forEach(function (item) {\n      item.removeEventListener(event, data.cb, data.capture);\n    });\n  }\n}\n\nfunction once(el, event, run, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  on(el, event, function (e) {\n    off(el, event);\n    run(e);\n  }, capture);\n}\n\nvar transform = null;\nfunction prefixedTransform() {\n  if (transform) {\n    return transform;\n  }\n\n  var testEl = document.createElement('div');\n\n  if (testEl.style.transform === null) {\n    var vendors = ['Webkit', 'webkit', 'Moz', 'ms'];\n    var property = null;\n\n    for (var i = 0, len = vendors.length; i < len && !property; i++) {\n      var tProperty = vendors[i] + \"Transform\";\n\n      if (typeof testEl.style[tProperty] !== 'undefined') {\n        property = tProperty;\n      }\n    }\n\n    transform = property;\n  } else {\n    transform = 'transform';\n  }\n\n  return transform;\n}\n\nfunction removeClass(selector, cls) {\n  if (Array.isArray(selector)) {\n    return selector.forEach(function (item) {\n      return removeClass(item, cls);\n    });\n  }\n\n  var els = find(selector);\n\n  if (els.length) {\n    var clsArray = [].concat(cls);\n    els.forEach(function (el) {\n      clsArray.forEach(function (item) {\n        el.classList.remove(item);\n      });\n    });\n    return els;\n  }\n}\n\nvar SCROLLABLE_CONTAINER;\n\nfunction getScrollableContainer() {\n  if (SCROLLABLE_CONTAINER) {\n    return SCROLLABLE_CONTAINER;\n  }\n\n  var documentElement = window.document.documentElement;\n  var scrollableContainer;\n  documentElement.scrollTop = 1;\n\n  if (documentElement.scrollTop === 1) {\n    documentElement.scrollTop = 0;\n    scrollableContainer = documentElement;\n  } else {\n    scrollableContainer = document.body;\n  }\n\n  SCROLLABLE_CONTAINER = scrollableContainer;\n  return scrollableContainer;\n}\n\nfunction show(selector) {\n  if (Array.isArray(selector)) {\n    selector.forEach(function (item) {\n      return show(item);\n    });\n  }\n\n  var els = find(selector);\n\n  if (els.length) {\n    els.forEach(function (el) {\n      el.style.display = el.dataset._currentDisplay || 'block';\n    });\n  }\n}\n\nfunction toggleClass(selector, cls) {\n  if (Array.isArray(selector)) {\n    return selector.forEach(function (item) {\n      return toggleClass(item, cls);\n    });\n  }\n\n  var els = find(selector);\n\n  if (els.length) {\n    var clsArray = [].concat(cls);\n    els.forEach(function (el) {\n      clsArray.forEach(function (item) {\n        el.classList.toggle(item);\n      });\n    });\n    return els;\n  }\n}\n\nvar setupReady = function setupReady(callbacks) {\n  return function (callback) {\n    callbacks.push(callback);\n\n    function execute() {\n      while (callbacks.length) {\n        var fn = callbacks.shift();\n\n        if (typeof fn === 'function') {\n          fn();\n        }\n      }\n    }\n\n    function loaded() {\n      document.removeEventListener('DOMContentLoaded', loaded);\n      execute();\n    }\n\n    setTimeout(function () {\n      if (document.readyState !== 'loading') {\n        return execute();\n      }\n    }, 0);\n    document.addEventListener('DOMContentLoaded', loaded);\n  };\n};\n\nvar ready = setupReady([]);\n\nfunction styles(selector, css) {\n  if (Array.isArray(selector)) {\n    selector.forEach(function (item) {\n      return styles(item, css);\n    });\n  }\n\n  var els = find(selector);\n\n  if (els.length) {\n    els.forEach(function (el) {\n      Object.keys(css).forEach(function (key) {\n        el.style[key] = css[key];\n      });\n    });\n  }\n}\n\nfunction addAttrs(selector, attrs) {\n  if (Array.isArray(selector)) {\n    return selector.forEach(function (item) {\n      return addAttrs(item, attrs);\n    });\n  }\n\n  var els = find(selector);\n\n  if (els.length) {\n    els.forEach(function (item) {\n      Object.keys(attrs).forEach(function (attr) {\n        if (attr in item) {\n          item[attr] = attrs[attr];\n        } else {\n          item.dataset[attr] = attrs[attr];\n        }\n      });\n    });\n  }\n\n  return els;\n}\n\nfunction html(selector, value) {\n  if (Array.isArray(selector)) {\n    selector.forEach(function (item) {\n      return html(item, value);\n    });\n  }\n\n  var el = find(selector);\n\n  if (el.length) {\n    var length = el.length;\n\n    for (var i = 0; i < length; i += 1) {\n      el[i].innerHTML = value;\n    }\n  }\n}\n\n/* global DocumentTouch */\nfunction isTouch() {\n  return 'ontouchstart' in window || window.DocumentTouch && document instanceof DocumentTouch;\n}\n\nfunction bindEvents(el, events) {\n  Object.keys(events).forEach(function (event) {\n    on(el, event, events[event]);\n  });\n}\n\nfunction modify(selector, params) {\n  if (Array.isArray(selector)) {\n    selector.forEach(function (item) {\n      return modify(item, params);\n    });\n  }\n\n  var modules = {\n    addClass: addClass,\n    removeClass: removeClass,\n    html: html,\n    events: on,\n    styles: styles\n  };\n  var els = find(selector);\n\n  if (els.length) {\n    els.forEach(function (el) {\n      Object.keys(params).forEach(function (param, index) {\n        if (param in modules) {\n          if (param === 'events') {\n            bindEvents(el, params[param]);\n          }\n\n          modules[param](el, params[param]);\n        }\n      });\n    });\n  }\n}\n\nfunction append(selector, value) {\n  if (Array.isArray(selector)) {\n    return selector.forEach(function (item) {\n      return append(item, value);\n    });\n  }\n\n  var els = find(selector);\n\n  if (els.length) {\n    els.forEach(function (el) {\n      if (typeof value === 'string') {\n        el.insertAdjacentHTML('beforeend', value);\n      } else {\n        el.appendChild(value);\n      }\n    });\n  }\n}\n\nfunction toArray(value) {\n  if (!value) {\n    return [];\n  }\n\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  if (value instanceof Node) {\n    return [value];\n  }\n\n  return [].slice.call(value);\n}\n\nfunction remove(selector, context) {\n  if (Array.isArray(selector)) {\n    return selector.forEach(function (item) {\n      return remove(item, context);\n    });\n  }\n\n  var els = find(selector, context);\n\n  if (els.length) {\n    els.forEach(function (el) {\n      if (el.prototype && el.prototype.remove) {\n        el.remove();\n      } else if (el.parentNode) {\n        el.parentNode.removeChild(el);\n      }\n    });\n  }\n}\n\nvar domassist_default = {\n  addClass: addClass,\n  delegate: delegate,\n  find: find,\n  findOne: findOne,\n  fire: fire,\n  hasClass: hasClass,\n  hide: hide,\n  hover: hover,\n  isWindow: isWindow,\n  off: off,\n  on: on,\n  once: once,\n  prefixedTransform: prefixedTransform,\n  removeClass: removeClass,\n  scrollableContainer: getScrollableContainer,\n  show: show,\n  matches: matches,\n  toggleClass: toggleClass,\n  closest: closest,\n  ready: ready,\n  styles: styles,\n  addAttrs: addAttrs,\n  html: html,\n  isTouch: isTouch,\n  modify: modify,\n  append: append,\n  toArray: toArray,\n  remove: remove\n};\n\nexport default domassist_default;\nexport { addAttrs, addClass, append, closest, delegate, find, findOne, fire, hasClass, hide, hover, html, isTouch, isWindow, matches, modify, off, on, once, prefixedTransform, ready, remove, removeClass, getScrollableContainer as scrollableContainer, show, styles, toArray, toggleClass };\n//# sourceMappingURL=domassist.js.map\n","import{find as t,findOne as e,on as o}from\"domassist\";import i from\"attrobj\";import n from\"aug\";function s(t){return t.parentNode?JSON.parse(JSON.stringify(t.parentNode.dataset)).module?t.parentNode:s(t.parentNode):t}var r={find:t,findOne:e,on:o},d=function(){function t(e,o){return void 0===o&&(o=\"\"),this.log(\"begin setup\"),this.el=e,this.els={},this.options=n({},this.defaults,i(\"module\",this.el)),this.moduleName=o||this.el.dataset.module,this.setUps={actions:[],named:[],options:[]},this.boundActionRouter=this.actionRouter.bind(this),this.preInit(),this.storeRef(),this.setupActions(),this.setupNamed(),this.verifyRequired(),this.postInit(),this.log(\"initalized\"),t.debug&&(this.el.module=this),this}var e,o=t.prototype;return o.preInit=function(){},o.postInit=function(){},o.verifyRequired=function(){var t=this;return this.required==={}||(void 0!==this.required.options&&(this.setUps.options=Object.keys(this.options)),Object.keys(this.required).forEach(function(e){t.required[e].forEach(function(o){if(t.setUps[e].indexOf(o)<0)throw new Error(o+\" is required as \"+e+\" for \"+t.moduleName+\", but is missing!\")})})),this},o.setupActions=function(){var t=this;this.setupAction(this.el),this.find(\"[data-action]\").forEach(function(e){s(e)===t.el&&t.setupAction(e)})},o.setupAction=function(e){if(\"true\"!==e.dataset.domoduleActionProcessed){var o=t.parseAction(e),i=o.name,n=o.type;i&&(\"function\"==typeof this[i]?(this.log(i+\" bound\"),this.storeSetUp(i,\"actions\"),r.on(e,n,this.boundActionRouter),e.dataset.domoduleActionProcessed=\"true\"):this.log(i+\" was registered, but there is no function set up\"))}},o.actionRouter=function(e){var o=e.currentTarget,n=t.parseAction(o).name,s=i(\"action\",o);this[n].call(this,o,e,s)},o.setupNamed=function(){var t=this;this.find(\"[data-name]\").forEach(function(e){s(e)===t.el&&(e.dataset.domoduleNameProcessed||(t.els[e.dataset.name]=e,t.storeSetUp(e.dataset.name,\"named\"),e.dataset.domoduleNameProcessed=\"true\",e.dataset.domoduleOwner=t.id))})},o.storeRef=function(){if(void 0===window.domorefs&&(window.domorefs={}),void 0!==window.domorefs[this.el.dataset.moduleUid])return!1;this.id=this.uuid,this.el.dataset.moduleUid=this.id,window.domorefs[this.el.dataset.moduleUid]=this},o.find=function(t){return r.find(t,this.el)},o.findOne=function(t){return r.findOne(t,this.el)},o.findByName=function(t){return this.els[t]},o.getOption=function(t){return this.options[t]},o.storeSetUp=function(t,e){this.setUps[e].indexOf(t)<0&&this.setUps[e].push(t)},o.destroy=function(){var e=this;r.find(\"[data-action]\",this.el.parentNode).forEach(function(o){if(\"true\"===o.dataset.domoduleActionProcessed){var i=t.parseAction(o);o.removeEventListener(i.type,e.boundActionRouter),o.dataset.domoduleActionProcessed=\"false\"}})},t.parseAction=function(t){var e=t.dataset,o=e.actionType;return{name:e.action,type:void 0===o?\"click\":o}},t.getInstance=function(t){if(t instanceof Node)return window.domorefs[t.dataset.moduleUid];throw new Error(\"getInstance expects a dom node\")},t.register=function(e,o){\"function\"==typeof e&&(e=(o=e).prototype.constructor.name),window.domodules||(window.domodules={}),t.log(\"Registering \"+e),window.domodules[e]=o},t.discover=function(e){if(void 0===e&&(e=\"body\"),t.log(\"Discovering modules...\"),window.domodules){var o;o=e instanceof Node?[e]:Array.isArray(e)?e:r.find(e);var i=[];return o.forEach(function(e){r.find(\"[data-module]\",e).forEach(function(e){var o=e.dataset.module;if(o&&\"function\"==typeof window.domodules[o]){if(\"object\"==typeof window.domorefs&&void 0!==window.domorefs[e.dataset.moduleUid])return;t.log(o+\" found\"),i.push(new window.domodules[o](e))}})}),i}t.log(\"No modules found\")},o.log=function(e){t.log(this.constructor.name+\": \"+e)},t.log=function(e){t.debug&&console.log(\"[DOMODULE] \"+e)},(e=[{key:\"required\",get:function(){return{}}},{key:\"defaults\",get:function(){return{}}},{key:\"uuid\",get:function(){return\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g,function(t){var e=16*Math.random()|0;return(\"x\"===t?e:3&e|8).toString(16)})}}])&&function(t,e){for(var o=0;o<e.length;o++){var i=e[o];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}(t.prototype,e),t}();d.debug=\"object\"==typeof window.localStorage&&window.localStorage.getItem(\"DomoduleDebug\"),d.autoDiscover=!0,window.addEventListener(\"DOMContentLoaded\",function(){d.autoDiscover&&d.discover()});export default d;\n//# sourceMappingURL=domodule.module.js.map\n","var DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction morphAttrs(fromNode, toNode) {\n    var toNodeAttrs = toNode.attributes;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // document-fragments dont have attributes so lets not do anything\n    if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return;\n    }\n\n    // update attributes on original DOM element\n    for (var i = toNodeAttrs.length - 1; i >= 0; i--) {\n        attr = toNodeAttrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                if (attr.prefix === 'xmlns'){\n                    attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix\n                }\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    var fromNodeAttrs = fromNode.attributes;\n\n    for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {\n        attr = fromNodeAttrs[d];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n\n            if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n            }\n        } else {\n            if (!toNode.hasAttribute(attrName)) {\n                fromNode.removeAttribute(attrName);\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');\nvar HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();\n\nfunction createFragmentFromTemplate(str) {\n    var template = doc.createElement('template');\n    template.innerHTML = str;\n    return template.content.childNodes[0];\n}\n\nfunction createFragmentFromRange(str) {\n    if (!range) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment = range.createContextualFragment(str);\n    return fragment.childNodes[0];\n}\n\nfunction createFragmentFromWrap(str) {\n    var fragment = doc.createElement('body');\n    fragment.innerHTML = str;\n    return fragment.childNodes[0];\n}\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    str = str.trim();\n    if (HAS_TEMPLATE_SUPPORT) {\n      // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which\n      // createContextualFragment doesn't support\n      // <template> support not available in IE\n      return createFragmentFromTemplate(str);\n    } else if (HAS_RANGE_SUPPORT) {\n      return createFragmentFromRange(str);\n    }\n\n    return createFragmentFromWrap(str);\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n    var fromCodeStart, toCodeStart;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    fromCodeStart = fromNodeName.charCodeAt(0);\n    toCodeStart = toNodeName.charCodeAt(0);\n\n    // If the target element is a virtual DOM node or SVG node then we may\n    // need to normalize the tag name before comparing. Normal HTML elements that are\n    // in the \"http://www.w3.org/1999/xhtml\"\n    // are converted to upper case\n    if (fromCodeStart <= 90 && toCodeStart >= 97) { // from is upper and to is lower\n        return fromNodeName === toNodeName.toUpperCase();\n    } else if (toCodeStart <= 90 && fromCodeStart >= 97) { // to is upper and from is lower\n        return toNodeName === fromNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE$1 = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n  if (node) {\n      return (node.getAttribute && node.getAttribute('id')) || node.id;\n  }\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = Object.create(null);\n        var keyedRemovalList = [];\n\n        function addKeyedRemoval(key) {\n            keyedRemovalList.push(key);\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    // if we find a duplicate #id node in cache, replace `el` with cache value\n                    // and morph it to the child node.\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    } else {\n                      handleNodeAdded(curChild);\n                    }\n                } else {\n                  // recursively call for curChild and it's children to see if we find something in\n                  // fromNodesLookup\n                  handleNodeAdded(curChild);\n                }\n\n                curChild = nextSibling;\n            }\n        }\n\n        function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n            // We have processed all of the \"to nodes\". If curFromNodeChild is\n            // non-null then we still have some from nodes left over that need\n            // to be removed\n            while (curFromNodeChild) {\n                var fromNextSibling = curFromNodeChild.nextSibling;\n                if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                    // Since the node is keyed it might be matched up later so we defer\n                    // the actual removal to later\n                    addKeyedRemoval(curFromNodeKey);\n                } else {\n                    // NOTE: we skip nested keyed nodes from being removed since there is\n                    //       still a chance they will be matched up later\n                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                }\n                curFromNodeChild = fromNextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (!childrenOnly) {\n                // optional\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                // update attributes on original DOM element first\n                morphAttrs(fromEl, toEl);\n                // optional\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n              morphChildren(fromEl, toEl);\n            } else {\n              specialElHandlers.TEXTAREA(fromEl, toEl);\n            }\n        }\n\n        function morphChildren(fromEl, toEl) {\n            var curToNodeChild = toEl.firstChild;\n            var curFromNodeChild = fromEl.firstChild;\n            var curToNodeKey;\n            var curFromNodeKey;\n\n            var fromNextSibling;\n            var toNextSibling;\n            var matchingFromEl;\n\n            // walk the children\n            outer: while (curToNodeChild) {\n                toNextSibling = curToNodeChild.nextSibling;\n                curToNodeKey = getNodeKey(curToNodeChild);\n\n                // walk the fromNode children all the way through\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n\n                    if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                    var curFromNodeType = curFromNodeChild.nodeType;\n\n                    // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n                    var isCompatible = undefined;\n\n                    if (curFromNodeType === curToNodeChild.nodeType) {\n                        if (curFromNodeType === ELEMENT_NODE) {\n                            // Both nodes being compared are Element nodes\n\n                            if (curToNodeKey) {\n                                // The target node has a key so we want to match it up with the correct element\n                                // in the original DOM tree\n                                if (curToNodeKey !== curFromNodeKey) {\n                                    // The current element in the original DOM tree does not have a matching key so\n                                    // let's check our lookup to see if there is a matching element in the original\n                                    // DOM tree\n                                    if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                        if (fromNextSibling === matchingFromEl) {\n                                            // Special case for single element removals. To avoid removing the original\n                                            // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                            // we will instead discard the current node and wait until the next\n                                            // iteration to properly match up the keyed target element with its matching\n                                            // element in the original tree\n                                            isCompatible = false;\n                                        } else {\n                                            // We found a matching keyed element somewhere in the original DOM tree.\n                                            // Let's move the original DOM node into the current position and morph\n                                            // it.\n\n                                            // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                            // the `removeNode()` function for the node that is being discarded so that\n                                            // all lifecycle hooks are correctly invoked\n                                            fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                            // fromNextSibling = curFromNodeChild.nextSibling;\n\n                                            if (curFromNodeKey) {\n                                                // Since the node is keyed it might be matched up later so we defer\n                                                // the actual removal to later\n                                                addKeyedRemoval(curFromNodeKey);\n                                            } else {\n                                                // NOTE: we skip nested keyed nodes from being removed since there is\n                                                //       still a chance they will be matched up later\n                                                removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                            }\n\n                                            curFromNodeChild = matchingFromEl;\n                                        }\n                                    } else {\n                                        // The nodes are not compatible since the \"to\" node has a key and there\n                                        // is no matching keyed node in the source tree\n                                        isCompatible = false;\n                                    }\n                                }\n                            } else if (curFromNodeKey) {\n                                // The original has a key\n                                isCompatible = false;\n                            }\n\n                            isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                            if (isCompatible) {\n                                // We found compatible DOM elements so transform\n                                // the current \"from\" node to match the current\n                                // target DOM node.\n                                // MORPH\n                                morphEl(curFromNodeChild, curToNodeChild);\n                            }\n\n                        } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                            // Both nodes being compared are Text or Comment nodes\n                            isCompatible = true;\n                            // Simply update nodeValue on the original node to\n                            // change the text value\n                            if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                            }\n\n                        }\n                    }\n\n                    if (isCompatible) {\n                        // Advance both the \"to\" child and the \"from\" child since we found a match\n                        // Nothing else to do as we already recursively called morphChildren above\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    // No compatible match so remove the old node from the DOM and continue trying to find a\n                    // match in the original DOM. However, we only do this if the from node is not keyed\n                    // since it is possible that a keyed node might match up with a node somewhere else in the\n                    // target tree and we don't want to discard it just yet since it still might find a\n                    // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                    // that didn't find a home\n                    if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n\n                    curFromNodeChild = fromNextSibling;\n                } // END: while(curFromNodeChild) {}\n\n                // If we got this far then we did not find a candidate match for\n                // our \"to node\" and we exhausted all of the children \"from\"\n                // nodes. Therefore, we will just append the current \"to\" node\n                // to the end\n                if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                    fromEl.appendChild(matchingFromEl);\n                    // MORPH\n                    morphEl(matchingFromEl, curToNodeChild);\n                } else {\n                    var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                    if (onBeforeNodeAddedResult !== false) {\n                        if (onBeforeNodeAddedResult) {\n                            curToNodeChild = onBeforeNodeAddedResult;\n                        }\n\n                        if (curToNodeChild.actualize) {\n                            curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                        }\n                        fromEl.appendChild(curToNodeChild);\n                        handleNodeAdded(curToNodeChild);\n                    }\n                }\n\n                curToNodeChild = toNextSibling;\n                curFromNodeChild = fromNextSibling;\n            }\n\n            cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphChildren(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {\n                return;\n            }\n\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n","function select(element) {\n    var selectedText;\n\n    if (element.nodeName === 'SELECT') {\n        element.focus();\n\n        selectedText = element.value;\n    }\n    else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n        var isReadOnly = element.hasAttribute('readonly');\n\n        if (!isReadOnly) {\n            element.setAttribute('readonly', '');\n        }\n\n        element.select();\n        element.setSelectionRange(0, element.value.length);\n\n        if (!isReadOnly) {\n            element.removeAttribute('readonly');\n        }\n\n        selectedText = element.value;\n    }\n    else {\n        if (element.hasAttribute('contenteditable')) {\n            element.focus();\n        }\n\n        var selection = window.getSelection();\n        var range = document.createRange();\n\n        range.selectNodeContents(element);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        selectedText = selection.toString();\n    }\n\n    return selectedText;\n}\n\nmodule.exports = select;\n","import Domodule from 'domodule';\nimport { on, findOne } from 'domassist';\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar BASE_URLS = {\n  twitter: 'https://twitter.com/intent/tweet',\n  facebook: 'https://www.facebook.com/sharer/sharer.php',\n  gplus: 'https://plus.google.com/share',\n  linkedin: 'https://www.linkedin.com/shareArticle',\n  pinterest: 'https://pinterest.com/pin/create/button',\n  reddit: 'https://reddit.com/submit'\n};\n\nvar SocialShareButton =\n/*#__PURE__*/\nfunction (_Domodule) {\n  _inheritsLoose(SocialShareButton, _Domodule);\n\n  function SocialShareButton() {\n    return _Domodule.apply(this, arguments) || this;\n  }\n\n  var _proto = SocialShareButton.prototype;\n\n  _proto.postInit = function postInit() {\n    var _this = this;\n\n    var setupMethod = this.options.net + \"Setup\";\n    var shareMethod = this.options.net + \"Share\";\n\n    if (!this[shareMethod] && !this[setupMethod]) {\n      throw new Error(\"Sharing method for \" + this.options.net + \" is not implemented\");\n    }\n\n    if (this[setupMethod]) {\n      this[setupMethod]();\n    }\n\n    if (this[shareMethod]) {\n      on(this.el, 'click', function (event) {\n        event.preventDefault();\n\n        _this[shareMethod]();\n      });\n    }\n  };\n\n  _proto.getShareUrl = function getShareUrl() {\n    var url = window.location.href;\n\n    if (this.options.baseUrl) {\n      if (this.options.relative) {\n        url = \"\" + window.location.origin + window.location.pathname + this.options.baseUrl;\n      } else {\n        url = this.options.baseUrl;\n      }\n    }\n\n    return url;\n  };\n\n  _proto.gplusShare = function gplusShare() {\n    SocialShareButton.openWindow(this.el.href, '600', '500', 'gplusWindow');\n  };\n\n  _proto.twitterShare = function twitterShare() {\n    SocialShareButton.openWindow(this.el.href, '260', '500', 'twitterWindow');\n  };\n\n  _proto.linkedinShare = function linkedinShare() {\n    SocialShareButton.openWindow(this.el.href, '520', '570', 'linkedinWindow');\n  };\n\n  _proto.pinterestShare = function pinterestShare() {\n    SocialShareButton.openWindow(this.el.href, '600', '600', 'pinterestWindow');\n  };\n\n  _proto.redditShare = function redditShare() {\n    SocialShareButton.openWindow(this.el.href, '600', '600', 'redditWindow');\n  };\n\n  _proto.facebookShare = function facebookShare() {\n    if (typeof window.FB !== 'undefined' && typeof window.FB.ui !== 'undefined') {\n      var object = {\n        method: 'share',\n        href: this.getShareUrl()\n      };\n\n      if (this.options.tag) {\n        object.hashtag = \"#\" + this.options.tag;\n      }\n\n      if (this.options.text) {\n        object.quote = this.options.text;\n      }\n\n      FB.ui(object);\n    } else {\n      SocialShareButton.openWindow(this.el.href, '440', '600', 'facebookWindow');\n    }\n  };\n\n  _proto.facebookSetup = function facebookSetup() {\n    var params = [\"u=\" + this.getShareUrl()];\n\n    if (this.options.tag) {\n      params.push(\"hashtag=\" + encodeURIComponent(\"#\" + this.options.tag));\n    }\n\n    if (this.options.text) {\n      params.push(\"quote=\" + encodeURIComponent(this.options.text));\n    }\n\n    this.el.href = BASE_URLS.facebook + \"?\" + params.join('&');\n  };\n\n  _proto.emailSetup = function emailSetup() {\n    var title = encodeURIComponent(this.options.subject || document.title);\n    var body = this.options.body || 'Check this out #url';\n    body = body.replace(/#url/gi, this.getShareUrl());\n    body = encodeURIComponent(body);\n    this.el.href = \"mailto:?subject=\" + title + \"&body=\" + body;\n  };\n\n  _proto.gplusSetup = function gplusSetup() {\n    this.el.href = BASE_URLS.gplus + \"?url=\" + this.getShareUrl();\n  };\n\n  _proto.linkedinSetup = function linkedinSetup() {\n    var params = [\"url=\" + encodeURIComponent(this.getShareUrl())];\n    var shareText = this.options.text;\n    var shareTitle = this.options.title;\n\n    if (shareText) {\n      params.push(\"summary=\" + encodeURIComponent(shareText));\n    }\n\n    if (shareTitle) {\n      params.push(\"title=\" + encodeURIComponent(shareTitle));\n    }\n\n    this.el.href = BASE_URLS.linkedin + \"?mini=true&\" + params.join('&');\n  };\n\n  _proto.twitterSetup = function twitterSetup() {\n    var shareText = this.options.text || SocialShareButton.getMeta('text', 'twi');\n    var shareTag = this.options.tags || SocialShareButton.getMeta('hashtag', 'twi');\n    var shareVia = this.options.via || SocialShareButton.getMeta('author', 'twi');\n    var params = [];\n    params.push(\"url=\" + encodeURIComponent(this.getShareUrl()));\n\n    if (shareText) {\n      params.push(\"text=\" + encodeURIComponent(shareText));\n    }\n\n    if (shareTag && shareTag !== 'none') {\n      params.push(\"hashtags=\" + encodeURIComponent(shareTag));\n    }\n\n    if (shareVia && shareVia !== 'none') {\n      params.push(\"via=\" + encodeURIComponent(shareVia));\n    }\n\n    this.el.href = BASE_URLS.twitter + \"?\" + params.join('&');\n  };\n\n  _proto.pinterestSetup = function pinterestSetup() {\n    var shareTitle = this.options.title || SocialShareButton.getMeta('title');\n    var shareMedia = this.options.media || SocialShareButton.getMeta('image');\n    var params = [\"url=\" + encodeURIComponent(this.getShareUrl())];\n\n    if (shareTitle) {\n      params.push(\"description=\" + encodeURIComponent(shareTitle));\n    }\n\n    if (shareMedia) {\n      params.push(\"media=\" + encodeURIComponent(shareMedia));\n    }\n\n    this.el.href = BASE_URLS.pinterest + \"?\" + params.join('&');\n  };\n\n  _proto.redditSetup = function redditSetup() {\n    var shareTitle = this.options.title;\n    var params = [\"url=\" + encodeURIComponent(this.getShareUrl())];\n\n    if (shareTitle) {\n      params.push(\"title=\" + encodeURIComponent(shareTitle));\n    }\n\n    this.el.href = BASE_URLS.reddit + \"?\" + params.join('&');\n  };\n\n  SocialShareButton.getMeta = function getMeta(tag, prop) {\n    if (prop === void 0) {\n      prop = 'og';\n    }\n\n    var meta = findOne(\"meta[property=\\\"\" + prop + \":\" + tag + \"\\\"]\");\n    return meta ? meta.getAttribute('content') : null;\n  };\n\n  SocialShareButton.openWindow = function openWindow(url, height, width, key) {\n    window.open(url, key, \"menubar=no,toolbar=no,left=200,top=200,resizable=yes,scrollbars=no,height=\" + height + \",width=\" + width);\n  };\n\n  _createClass(SocialShareButton, [{\n    key: \"required\",\n    get: function get() {\n      return {\n        options: ['net']\n      };\n    }\n  }, {\n    key: \"defaults\",\n    get: function get() {\n      return {\n        relative: false,\n        baseUrl: false\n      };\n    }\n  }]);\n\n  return SocialShareButton;\n}(Domodule);\nDomodule.register('SocialShareButton', SocialShareButton);\n\nexport default SocialShareButton;\n//# sourceMappingURL=social-share-button.js.map\n","!function(root, factory) {\n    \"function\" == typeof define && define.amd ? // AMD. Register as an anonymous module unless amdModuleId is set\n    define([], function() {\n        return root.svg4everybody = factory();\n    }) : \"object\" == typeof module && module.exports ? // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory() : root.svg4everybody = factory();\n}(this, function() {\n    /*! svg4everybody v2.1.9 | github.com/jonathantneal/svg4everybody */\n    function embed(parent, svg, target) {\n        // if the target exists\n        if (target) {\n            // create a document fragment to hold the contents of the target\n            var fragment = document.createDocumentFragment(), viewBox = !svg.hasAttribute(\"viewBox\") && target.getAttribute(\"viewBox\");\n            // conditionally set the viewBox on the svg\n            viewBox && svg.setAttribute(\"viewBox\", viewBox);\n            // copy the contents of the clone into the fragment\n            for (// clone the target\n            var clone = target.cloneNode(!0); clone.childNodes.length; ) {\n                fragment.appendChild(clone.firstChild);\n            }\n            // append the fragment into the svg\n            parent.appendChild(fragment);\n        }\n    }\n    function loadreadystatechange(xhr) {\n        // listen to changes in the request\n        xhr.onreadystatechange = function() {\n            // if the request is ready\n            if (4 === xhr.readyState) {\n                // get the cached html document\n                var cachedDocument = xhr._cachedDocument;\n                // ensure the cached html document based on the xhr response\n                cachedDocument || (cachedDocument = xhr._cachedDocument = document.implementation.createHTMLDocument(\"\"), \n                cachedDocument.body.innerHTML = xhr.responseText, xhr._cachedTarget = {}), // clear the xhr embeds list and embed each item\n                xhr._embeds.splice(0).map(function(item) {\n                    // get the cached target\n                    var target = xhr._cachedTarget[item.id];\n                    // ensure the cached target\n                    target || (target = xhr._cachedTarget[item.id] = cachedDocument.getElementById(item.id)), \n                    // embed the target into the svg\n                    embed(item.parent, item.svg, target);\n                });\n            }\n        }, // test the ready state change immediately\n        xhr.onreadystatechange();\n    }\n    function svg4everybody(rawopts) {\n        function oninterval() {\n            // while the index exists in the live <use> collection\n            for (// get the cached <use> index\n            var index = 0; index < uses.length; ) {\n                // get the current <use>\n                var use = uses[index], parent = use.parentNode, svg = getSVGAncestor(parent), src = use.getAttribute(\"xlink:href\") || use.getAttribute(\"href\");\n                if (!src && opts.attributeName && (src = use.getAttribute(opts.attributeName)), \n                svg && src) {\n                    if (polyfill) {\n                        if (!opts.validate || opts.validate(src, svg, use)) {\n                            // remove the <use> element\n                            parent.removeChild(use);\n                            // parse the src and get the url and id\n                            var srcSplit = src.split(\"#\"), url = srcSplit.shift(), id = srcSplit.join(\"#\");\n                            // if the link is external\n                            if (url.length) {\n                                // get the cached xhr request\n                                var xhr = requests[url];\n                                // ensure the xhr request exists\n                                xhr || (xhr = requests[url] = new XMLHttpRequest(), xhr.open(\"GET\", url), xhr.send(), \n                                xhr._embeds = []), // add the svg and id as an item to the xhr embeds list\n                                xhr._embeds.push({\n                                    parent: parent,\n                                    svg: svg,\n                                    id: id\n                                }), // prepare the xhr ready state change event\n                                loadreadystatechange(xhr);\n                            } else {\n                                // embed the local id into the svg\n                                embed(parent, svg, document.getElementById(id));\n                            }\n                        } else {\n                            // increase the index when the previous value was not \"valid\"\n                            ++index, ++numberOfSvgUseElementsToBypass;\n                        }\n                    }\n                } else {\n                    // increase the index when the previous value was not \"valid\"\n                    ++index;\n                }\n            }\n            // continue the interval\n            (!uses.length || uses.length - numberOfSvgUseElementsToBypass > 0) && requestAnimationFrame(oninterval, 67);\n        }\n        var polyfill, opts = Object(rawopts), newerIEUA = /\\bTrident\\/[567]\\b|\\bMSIE (?:9|10)\\.0\\b/, webkitUA = /\\bAppleWebKit\\/(\\d+)\\b/, olderEdgeUA = /\\bEdge\\/12\\.(\\d+)\\b/, edgeUA = /\\bEdge\\/.(\\d+)\\b/, inIframe = window.top !== window.self;\n        polyfill = \"polyfill\" in opts ? opts.polyfill : newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537 || edgeUA.test(navigator.userAgent) && inIframe;\n        // create xhr requests object\n        var requests = {}, requestAnimationFrame = window.requestAnimationFrame || setTimeout, uses = document.getElementsByTagName(\"use\"), numberOfSvgUseElementsToBypass = 0;\n        // conditionally start the interval if the polyfill is active\n        polyfill && oninterval();\n    }\n    function getSVGAncestor(node) {\n        for (var svg = node; \"svg\" !== svg.nodeName.toLowerCase() && (svg = svg.parentNode); ) {}\n        return svg;\n    }\n    return svg4everybody;\n});"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;;;;;AChzkpvsourceRoot":""}